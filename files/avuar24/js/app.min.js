/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
//////////new code//////////////////
const OrderMap = document.querySelector('.tabs__contacts-map');
if (OrderMap) {
    ymaps.ready(init);
}
////// select

if (document.querySelector('.select')) {
    const selects = document.querySelectorAll('.select');
    selects.forEach((select) => {
        showSelect(select);
    });
}

function showSelect(sel) {
    const selectSingle_labels = sel.querySelectorAll('.select__label');
    const selectSingle_title = sel.querySelector('.select__title');

    selectSingle_title.addEventListener('click', (e) => {
        if ('active' === sel.getAttribute('data-state') && e.target != sel) {
            sel.setAttribute('data-state', '');
        } else {
            sel.setAttribute('data-state', 'active');
        }
    });
    selectSingle_labels.forEach((lab) => {
        lab.addEventListener('click', (e) => {
            const active = sel.querySelector('.select__label.active');
            if (active) {
                active.classList.remove('active');
            }
            selectSingle_title.textContent = e.target.textContent;
            sel.setAttribute('data-state', '');
            lab.classList.add('active');
        });
    });

    document.addEventListener('click', (e) => {
        if (!sel.contains(e.target)) {
            sel.setAttribute('data-state', '');
        }
    });
}

// plus minus

function plus(minus, out) {
    out.value = Number(out.value) + 1;
    minus.disabled = false;
}
function minus(minus, out) {
    if (out.value == 1) {
        minus.disabled = true;
        return;
    } else out.value = Number(out.value) - 1;
}

const plusList = document.querySelectorAll('.plus');
const minusList = document.querySelectorAll('.minus');

plusList.forEach((plusItem) => {
    plusItem.addEventListener('click', () => {
        const parent = plusItem.parentNode;
        const minusTarget = parent.querySelector('.minus');
        const input = parent.querySelector('input');

        plus(minusTarget, input);
    });
});

minusList.forEach((minusItem) => {
    minusItem.addEventListener('click', () => {
        const parent = minusItem.parentNode;
        const minusTarget = parent.querySelector('.minus');
        const input = parent.querySelector('input');
        minus(minusTarget, input);
    });
});

const cardsProducts = document.querySelectorAll('.card');
if (cardsProducts) {
    cardsProducts.forEach((card) => {
        const plusCard = card.querySelector('.plus');
        const minusCard = card.querySelector('.minus');
        const inputCardOut = card.querySelector('.card__counter input');
        const totalPrice = card.querySelector(
            '.cart .card__prices-total .card__price span'
        );
        const totalPriceOld = card.querySelector(
            '.cart .card__prices-total .card__price-old  span '
        );

        let price = 0;
        let priceOld = 0;
        if (totalPrice) {
            price = card.querySelector(
                '.card__prices .card__price span'
            ).textContent;
        }

        if (totalPriceOld) {
            priceOld = card.querySelector(
                '.card__prices .card__price-old span'
            ).textContent;
        }

        plusCard.addEventListener('click', () => {
            if (totalPrice) {
                totalPrice.textContent =
                    Number(price) * Number(inputCardOut.value);
            }
            if (totalPriceOld) {
                totalPriceOld.textContent =
                    Number(priceOld) * Number(inputCardOut.value);
            }
        });

        minusCard.addEventListener('click', () => {
            if (totalPrice) {
                totalPrice.textContent =
                    Number(price) * Number(inputCardOut.value);
            }
            if (totalPriceOld) {
                totalPriceOld.textContent =
                    Number(priceOld) * Number(inputCardOut.value);
            }
        });
    });
}

// delete card

const deleteCard = document.querySelectorAll('.card__del');
if (deleteCard) {
    deleteCard.forEach((del) => {
        del.addEventListener('click', () => {
            del.closest('.card').remove();
        });
    });
}

// showText
const containerDescr = document.querySelector('.filter__tags');

if (containerDescr) {
    showTextP(containerDescr);
}

function showTextP(container) {
    if (container) {
        const tags = container.querySelectorAll(`.filter__tags ul li`);
        const btn = container.querySelector('.filter__tags-more');
        btn.innerHTML = 'Показать все';

        tags.forEach((tag, ind) => {
            if (ind > 7) {
                tag.classList.add('hidden');
                btn.style.display = 'flex';
            }
        });

        btn.addEventListener('click', (e) => {
            btn.classList.toggle('active');
            if (btn.textContent === 'Скрыть') {
                btn.textContent = 'Показать больше';
                tags.forEach((tag, ind) => {
                    if (ind > 7) {
                        tag.classList.add('hidden');
                        btn.style.display = 'flex';
                    }
                });
            } else {
                btn.textContent = 'Скрыть';
                tags.forEach((tag, ind) => {
                    tag.classList.remove('hidden');
                });
            }
        });
    }
}

function tabsCatalog(selector, tabsPath) {
    if (tabsPath === 'block-appointment') {
        const tabsProducts = document.querySelector('.product__tabs');

        const tabsBtn = tabsProducts.querySelectorAll('.tabs__btn');
        const tabsContent = tabsProducts.querySelectorAll('.tabs__content');
        tabsBtn.forEach((el) => {
            el.classList.remove('active');
        });
        tabsContent.forEach((el) => {
            el.classList.remove('active');
        });

        document
            .querySelector(`[data-tabs-path="${'appointment'}"]`)
            .classList.add('active');
        document
            .querySelector(`[data-tabs-target="${'appointment'}"]`)
            .classList.add('active');
    } else if (tabsPath) {
        removeActiveClasses(selector);
        document
            .querySelector(`[data-tabs-path="${tabsPath}"]`)
            .classList.add('active');
        tabsHandler(tabsPath);
    }

    function tabsHandler(path) {
        removeActiveClasses(selector);
        document
            .querySelector(`[data-tabs-target="${path}"]`)
            .classList.add('active');
        document
            .querySelector(`[data-tabs-path="${path}"]`)
            .classList.add('active');
    }
    function removeActiveClasses(sel) {
        const tabsBtn = sel.querySelectorAll('[data-tabs-path]');
        const tabsContent = sel.querySelectorAll('[data-tabs-target]');
        tabsBtn.forEach((el) => {
            el.classList.remove('active');
        });
        tabsContent.forEach((el) => {
            el.classList.remove('active');
        });
    }
}

document.querySelector('body').addEventListener('click', (e) => {
    if (e.target.hasAttribute('data-tabs-path')) {
        const tabsPath = e.target.dataset.tabsPath;

        tabsCatalog(e.target.closest('.tabs'), tabsPath);
    }
});

//   popup

const btnsPopup = document.querySelectorAll('.open-popup');
const body = document.querySelector('body');
const btnsPopupToControl = document.querySelectorAll('.open-popup-control');
const modalOverlay = document.querySelector('.modal-overlay');
const modals = document.querySelectorAll('.modal');
const close = document.querySelectorAll('.close');
const modalReviews = document.querySelector('.modal-reviews');
const modalBtn = document.querySelectorAll('.modal__btn');
if (btnsPopup && modalOverlay) {
    btnsPopupToControl.forEach((el) => {
        el.addEventListener('click', (e) => {
            e.preventDefault();
            el.textContent = 'Добавлено';

            if (e.target.classList.contains('active')) {
                e.target.classList.add('active');
                return;
            } else {
                const item = el.closest('.card-item');
                const title = item.querySelector('.card-title').textContent;
                e.target.classList.add('active');
                openPopupControl(el, item, title);
            }
        });
    });

    close.forEach((btn) => {
        btn.addEventListener('click', () => {
            closePopup();
        });
    });
    modalBtn.forEach((btn) => {
        btn.addEventListener('click', () => {
            closePopup();
        });
    });

    modalOverlay.addEventListener('click', (e) => {
        if (e.target == modalOverlay) {
            closePopup();
        }
    });
    btnsPopup.forEach((btn) => {
        btn.addEventListener('click', (e) => {
            let path = e.currentTarget.getAttribute('data-path');
            e.preventDefault();
            openPopup(btn, path);
        });
    });
}

function openPopup(btn, path) {
    modals.forEach((el) => {
        el.classList.remove('active');

        document
            .querySelector(`[data-target="${path}"]`)
            .classList.add('active');
        modalOverlay.classList.add('active');
        body.classList.add('active');
    });
}

function openPopupControl(el, item, title) {
    let path = el.getAttribute('data-path');
    // modalOverlay.style.opacity = '1';
    item.classList.add('active');
    modalOverlay.classList.add('active-cart');
    const modalContent = document.querySelector('.modal__add');

    const text = item.querySelector('.card-title').textContent;

    const imgSrc = item.querySelector('.card-image img').getAttribute('src');
    const imgAlt = item.querySelector('.card-image img').getAttribute('alt');

    modalContent.innerHTML = `
        <img src="${imgSrc}" alt="${imgAlt}">
    <div class="modal__add-inner">
         <p class="modal__add-title">В корзине </p>
       <p class="modal__add-text">${text} </p>
    </div>
`;
    document.querySelector(`[data-target="${path}"]`).classList.add('active');
}
function closePopup() {
    modalOverlay.classList.remove('active');
    body.classList.remove('active');
    modals.forEach((el) => {
        el.classList.remove('active');
    });
}

// validate

function mask(event) {
    var matrix = '+7 (___) ___-__-__',
        i = 0,
        def = matrix.replace(/\D/g, ''),
        val = this.value.replace(/\D/g, '');
    if (def.length >= val.length) {
        val = def;
    }
    this.value = matrix.replace(/./g, function (a) {
        return /[_\d]/.test(a) && i < val.length
            ? val.charAt(i++)
            : i >= val.length
            ? ''
            : a;
    });
    if (event.type == 'blur') {
        if (this.value.length < 18) {
            this.value = '';
        }
    }
}
const phones = document.querySelectorAll("input[name='phone']");
phones.forEach((phone) => {
    phone.addEventListener('input', mask);
});

function validateName(nameInput) {
    const isValid = nameInput.value.length >= 2;
    nameInput.parentNode.classList.toggle('active', !isValid);
    return isValid;
}
function validateInn(innInput) {
    const isValid = innInput.value.length >= 16;
    innInput.parentNode.classList.toggle('active', !isValid);
    return isValid;
}
function validateEmail(emailInput) {
    const email = emailInput.value.trim();
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const isValid = emailRegex.test(email);
    emailInput.parentNode.classList.toggle('active', !isValid);

    return isValid;
}
function validatePhone(phoneInput) {
    const isValid = phoneInput.value.length === 18;
    phoneInput.parentNode.classList.toggle('active', !isValid);
    phoneInput.parentNode.classList.toggle('valid', isValid);
    return isValid;
}
function deleteActive(input) {
    if (input.parentNode.classList.contains('active')) {
        input.addEventListener('input', () => {
            input.parentNode.classList.remove('active');
        });
    }
}
function validateForm(form) {
    const nameInputs = form.querySelectorAll("input[name='name'][required]");
    const lastNameInputs = form.querySelectorAll(
        "input[name='last-name'][required]"
    );
    const emailInputs = form.querySelectorAll("input[name='email'][required]");
    const companyInputs = form.querySelectorAll(
        "input[name='company'][required]"
    );
    const addressInputs = form.querySelectorAll(
        "input[name='address'][required]"
    );
    const innInputs = form.querySelectorAll("input[name='inn'][required]");

    const phoneInputs = form.querySelectorAll("input[name='phone'][required]");
    const inputForms = form.querySelectorAll('input');
    let isValid = true;
    if (nameInputs) {
        nameInputs.forEach((nameInput) => {
            isValid = validateName(nameInput) && isValid;
        });
    }
    if (companyInputs) {
        companyInputs.forEach((companyInput) => {
            isValid = validateName(companyInput) && isValid;
        });
    }
    if (addressInputs) {
        addressInputs.forEach((addressInput) => {
            isValid = validateName(addressInput) && isValid;
        });
    }

    if (lastNameInputs) {
        lastNameInputs.forEach((lastNameInput) => {
            isValid = validateName(lastNameInput) && isValid;
        });
    }

    if (innInputs) {
        innInputs.forEach((innInput) => {
            isValid = validateInn(innInput) && isValid;
        });
    }
    if (emailInputs) {
        emailInputs.forEach((emailInput) => {
            isValid = validateEmail(emailInput) && isValid;
        });
    }
    if (phoneInputs) {
        phoneInputs.forEach((phoneInput) => {
            isValid = validatePhone(phoneInput) && isValid;
        });
    }

    inputForms.forEach((input) => {
        deleteActive(input);
    });

    return isValid;
}
function handleSubmit(form) {
    if (validateForm(form)) {
        form.classList.add('active');

        // openPopup(btn, path)
        if (form.closest('.order__buyer')) {
            const btn = document.querySelector('.order__btn');

            btn.classList.add('open-popup');
            btn.setAttribute('data-path', 'thanks-popup');
            let path = btn.getAttribute('data-path');
            openPopup(btn, path);
        }

        if (form.classList.contains('form-one-click')) {
            closePopup();
            const btn = form.querySelector('.form__btn');
            btn.classList.add('open-popup');
            btn.setAttribute('data-path', 'thanks-popup');
            let path = btn.getAttribute('data-path');
            openPopup(btn, path);
        }
        if (form.classList.contains('form-admission')) {
            closePopup();
            const btn = form.querySelector('.form__btn');
            btn.classList.add('open-popup');
            btn.setAttribute('data-path', 'thanks-popup-admission');
            let path = btn.getAttribute('data-path');
            openPopup(btn, path);
        }
        if (form.classList.contains('form-review')) {
            closePopup();
            const btn = form.querySelector('.form__btn');
            btn.classList.add('open-popup');
            btn.setAttribute('data-path', 'thanks-popup-review');
            let path = btn.getAttribute('data-path');
            openPopup(btn, path);
        }
        form.reset();
    }
}

const buyer1 = document.querySelector('.tabs__content.active #buyer1');
const buyer2 = document.querySelector('.tabs__content.active #buyer2');
const orderBtn = document.querySelector('.order__btn');
const formOneClick = document.querySelector('#form-one-click');
const formOneReview = document.querySelector('#form-review');
const formOneAdmission = document.querySelector('#form-admission');
if (formOneClick) {
    const btn = formOneClick.querySelector('.form__btn');
    btn.addEventListener('click', (e) => {
        handleSubmit(formOneClick);
    });
}
if (formOneReview) {
    const btn = formOneReview.querySelector('.form__btn');
    btn.addEventListener('click', (e) => {
        handleSubmit(formOneReview);
    });
}
if (formOneAdmission) {
    const btn = formOneAdmission.querySelector('.form__btn');
    btn.addEventListener('click', (e) => {
        handleSubmit(formOneAdmission);
    });
}

if (orderBtn) {
    orderBtn.addEventListener('click', (e) => {
        const buyerForm = document.querySelector(
            '.order__buyer .tabs__content.active .form'
        );
        const deliveryForm = document.querySelector(
            '.order__delivery .tabs__content.active .form'
        );
        e.preventDefault();

        handleSubmit(buyerForm);
    });
}
const swiperProduct = new Swiper('.product-swiper', {
    slidesPerView: 5,
    spaceBetween: 12,
    loopedSlides: 5,
    freeMode: true,
    watchSlidesVisibility: true,
    watchSlidesProgress: true,

    breakpoints: {
        320: { slidesPerView: 3, direction: 'horizontal' },
        550: { slidesPerView: 4, direction: 'horizontal' },
        1025: { slidesPerView: 5, direction: 'vertical' },
    },
    navigation: {
        nextEl: '.slide2.swiper-button-next',
        prevEl: '.slide2.swiper-button-prev',
    },
});
const swiperProduct2 = new Swiper('.product-swiper2', {
    thumbs: {
        swiper: swiperProduct,
    },
});

const swiperReviews = new Swiper('.reviews-swiper.swiper', {
    loop: true,
    navigation: {
        nextEl: '.reviews__slider .swiper-button-next',
        prevEl: '.reviews__slider .swiper-button-prev',
    },
    pagination: {
        el: '.reviews__slider .swiper-pagination',
        clickable: true,
    },
    breakpoints: {
        320: {
            slidesPerView: 1,
            spaceBetween: 15,
        },
        550: {
            slidesPerView: 1.5,
            spaceBetween: 15,
        },

        769: {
            slidesPerView: 2,
            spaceBetween: 20,
        },
        1025: {
            slidesPerView: 3,
            spaceBetween: 20,
        },
    },
});
const swiperPopular = new Swiper('.slider-popular  .swiper', {
    navigation: {
        nextEl: '.slider-popular .swiper-button-next',
        prevEl: '.slider-popular .swiper-button-prev',
    },
    breakpoints: {
        320: {
            slidesPerView: 2,
            spaceBetween: 15,
        },
        600: {
            slidesPerView: 2.5,
            spaceBetween: 15,
        },

        769: {
            slidesPerView: 3,
            spaceBetween: 20,
        },
        1025: {
            slidesPerView: 4,
            spaceBetween: 30,
        },
    },
});
// product appointment

const appointmentList = document.querySelectorAll(
    '.product__appointment ul li'
);

if (appointmentList) {
    appointmentList.forEach((list, ind) => {
        if (window.matchMedia('(min-width: 1260px)').matches && ind > 5) {
            list.style.display = 'none';
        }
        if (window.matchMedia('(max-width: 1260px)').matches && ind > 4) {
            list.style.display = 'none';
        }
        if (window.matchMedia('(max-width: 769px)').matches && ind > 2) {
            list.style.display = 'none';
        }
        appointmentList[appointmentList.length - 1].style.display = 'block';
    });
}

// stars
let rating = document.querySelector('.rating');

if (rating) {
    let ratingItems = document.querySelectorAll('.rating__item');

    rating.addEventListener('click', function (e) {
        let target = e.target;
        if (target.classList.contains('rating__item')) {
            removeClass(ratingItems, 'current-active');
            target.classList.add('active', 'current-active');
        }
    });

    rating.addEventListener('mouseover', function (e) {
        let target = e.target;
        if (target.classList.contains('rating__item')) {
            removeClass(ratingItems, 'active');
            target.classList.add('active');
            mouseOverActiveClass(ratingItems);
        }
    });

    rating.addEventListener('mouseout', function () {
        addClass(ratingItems, 'active');
        mouseOutActiveClass(ratingItems);
    });

    function addClass(arr) {
        for (var i = 0, item = arr.length; i < item; i++) {
            for (var j = 1; j < arguments.length; j++) {
                ratingItems[i].classList.add(arguments[j]);
            }
        }
    }

    function removeClass(arr) {
        for (var i = 0, item = arr.length; i < item; i++) {
            for (var j = 1; j < arguments.length; j++) {
                ratingItems[i].classList.remove(arguments[j]);
            }
        }
    }

    function mouseOverActiveClass(arr) {
        for (var i = 0, item = arr.length; i < item; i++) {
            if (arr[i].classList.contains('active')) {
                break;
            } else {
                arr[i].classList.add('active');
            }
        }
    }

    function mouseOutActiveClass(arr) {
        for (var i = arr.length - 1; i >= 1; i--) {
            if (arr[i].classList.contains('current-active')) {
                break;
            } else {
                arr[i].classList.remove('active');
            }
        }
    }
}
const productBtnsWrapper = document.querySelector('.product__btns');

if (productBtnsWrapper) {
    const productBtns = document.querySelectorAll('.product__btns button');
    productBtns.forEach((btn) => {
        addActiveClass(btn, productBtnsWrapper);
    });
}
// add active class
function addActiveClass(sel, parent) {
    sel.addEventListener('click', (e) => {
        const active = parent.querySelector('.active');
        if (active) {
            active.classList.remove('active');
        }
        sel.classList.add('active');
    });
}

// accordion

const accordions = document.querySelectorAll('.accordion__control');
accordions.forEach((el) => {
    el.addEventListener('click', (e) => {
        const parent = e.currentTarget.parentNode;
        const self = e.currentTarget;
        const content = parent.querySelector('.accordion__content');

        self.parentNode.classList.toggle('open');
        console.log(self.textContent.trim());
        // Проверяем текст кнопки и меняем его соответственно
        if (self.classList.contains('section-text__more')) {
            if (self.textContent.trim() == 'Читать полностью') {
                self.textContent = 'Скрыть';
            } else {
                self.textContent = 'Читать полностью';
            }
        }

        // если открыт аккордеон
        if (self.parentNode.classList.contains('open')) {
            el.setAttribute('aria-expanded', true);
            content.setAttribute('aria-hidden', false);
            content.style.maxHeight = content.scrollHeight + 'px';
        } else {
            el.setAttribute('aria-expanded', false);
            content.setAttribute('aria-hidden', true);
            content.style.maxHeight = null;
            if (content.classList.contains('active')) {
                content.classList.remove('active');
            }
        }
    });
});

const filterTitle = document.querySelector('.filter__title');

if (filterTitle) {
    const parent = filterTitle.parentNode;
    const close = document.querySelector('.accordion__close');
    if (close) {
        close.addEventListener('click', (e) => {
            parent.classList.remove('active');
        });
    }

    filterTitle.addEventListener('click', (e) => {
        parent.classList.toggle('active');
    });
}

/******/ })()
;